1.Find the names of employees who work in the "Finance" department and have made sales on or after "2023-09-16.
Ans: db.EmployeesCollection.aggregate([ { $lookup: { from: "DepartmentsCollection", localField: "department_id", foreignField: "_id", as: "department" } }, { $match: { "department.name": "Finance" } }, { $lookup: { from: "SalesCollection", localField: "_id", foreignField: "employee_id", as: "sales" } }, { $match: { "sales.sale_date": { $gte: "2023-09-16" } } }, { $project: { _id: 0, name: 1 } }] )

2.Find the total sales count and total sales amount for each employee who has made a sale, and sort the results by total sales amount in descending order.
Ans: 

3.Retrieve a list of departments with more than 10 employees
Ans: 

4.Find the employees who have worked in the company for more than 5 years
Ans: 

5.Find the employee with the highest salary
Ans: db.EmployeesCollection.aggregate([{$lookup:{from:"DepartmentsCollection",localField:"department_id",foreignField:"_id",as:"employeesDepartments"}},{$unwind:"$employeesDepartments"},{$sort:{salary:-1}},{$limit:1},{$project:{_id:1,name:1,salary:1}}])

6.List the names and ages of employees in the "HR" department
Ans: db.EmployeesCollection.aggregate([{$lookup:{from:"DepartmentsCollection",localField:"department_id",foreignField:"_id",as:"employeesDepartments"}},{$unwind:"$employeesDepartments"},{$match:{"employeesDepartments.name":"HR"}},{$project:{name:1,age:1}}])

7.Retrieve the names of employees who have worked on the "Employee Management System" project
Ans: db.EmployeesCollection.aggregate([{$lookup:{from:"ProjectsCollection",localField:"department_id",foreignField:"department",as:"projectsDepartments"}},{$unwind:"$projectsDepartments"},{$match:{"projectsDepartments.name":"Employee Management System"}},{$project:{name:1}}])

8.Find the employees who have not made any sales
Ans: db.EmployeesCollection.aggregate([{$lookup:{from:"SalesCollection",localField:"_id",foreignField:"employee_id",as:"salesDepartments"}},{$unwind:"$salesDepartments"},{$match:{"salesDepartments.amount":{$eq:0}}},{$project:{name:1}}])

9.List the names of employees who have made a sale in September 2023
Ans: db.EmployeesCollection.aggregate([{$lookup:{from:"SalesCollection",localField:"_id",foreignField:"employee_id",as:"salesDepartments"}},{$unwind:"$salesDepartments"},{$match:{"salesDepartments.sale_date":{$lte: "2023-09-30"}}},{$project:{name:1}}])

10.Find the departments where the average employee age is greater than 35
Ans: db.EmployeesCollection.aggregate([{$lookup:{from:"DepartmentsCollection",localField:"department_id",foreignField:"_id",as:"employeesDepartments"}},{$unwind:"$employeesDepartments"},{$group:{_id:"$employeesDepartments.name",average:{$avg:"$age"}}},{$match:{average:{$gt:35}}},{$project:{"employeesDepartments.name":1}}])

11.Find the employees who have worked on at least three different projects
Ans: db.EmployeesCollection.aggregate([ { $lookup: { from: "ProjectsCollection", localField: "projects", foreignField: "_id", as: "projectsInfo" } }, { $addFields: { projectCount: { $size: "$projectsInfo" } } }, { $match: { projectCount: { $gte: 3 } } }, { $project: { _id: 1, name: 1, projectCount: 1 } }] )

12.List the names of employees who have not been assigned to any project
Ans: db.EmployeesCollection.aggregate([ { $lookup: { from: "ProjectsCollection", localField: "projects", foreignField: "_id", as: "projectsInfo" } }, { $addFields: { projectCount: { $size: "$projectsInfo" } } }, { $match: { projectCount: { $eq: 0 } } }, { $project: { _id: 1, name: 1, projectCount: 1 } }] )

13.Find the employees who have worked on projects from multiple departments
Ans: db.EmployeesCollection.aggregate([ { $lookup: { from: "ProjectsCollection", localField: "projects", foreignField: "_id", as: "projectsInfo" } }, { $unwind: "$projectsInfo" }, { $group: { _id: "$_id", name: { $first: "$name" }, numDepartments: { $addToSet: "$projectsInfo.department" } } }, { $match: { $expr: { $gt: [{ $size: "$numDepartments" }, 1] } } }] )

14.Find the employees who have the highest sales amount in a single sale
Ans: 

15.Retrieve the names of employees who have not made a sale in the last 90 days
Ans: 

16.Find the departments where the total employee salaries exceed $500,000
Ans: 

17.List the employees who have worked on the "Payroll Software" project and are older than 35
Ans: db.EmployeesCollection.aggregate([{ $lookup: { from: "ProjectsCollection", localField: "projects", foreignField: "_id", as: "projectsInfo" } },{ $unwind: "$projectsInfo" },{ $match: { "projectsInfo.name": "Payroll Software", age: { $gt: 35 }} },{ $project: { _id: 1, name: 1, age: 1, salary: 1, hire_date: 1 } }] )

18.Find the total number of sales and the total sales amount for each employee in the "HR" department
Ans: 

19.List the employees who have not been assigned to any project in the "Finance" department
Ans: 

20.List the employees who have worked on all projects in the "Engineering" department
Ans: 
